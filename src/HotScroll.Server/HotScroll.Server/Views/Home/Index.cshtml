@{
    ViewBag.Title = "ScrollCat Emulator";
}

<h2>ScrollCat Emulator</h2>

<div>
    <input type="button" id="playBtn" value="Play" />
    <input type="button" id="playWithFriendBtn" value="Play with Friend" />
    <br/>
    <input type="text" id="message" />
    <input type="button" id="sendbtn" value="Step" />
    <ul id="discussion">
    </ul>
</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-1.1.0-beta1.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.--> 
    <script>
        var Player = null;
        var Duel = null;
        $(function() {
            // Reference the auto-generated proxy for the hub.  
            var gameHubProxy = $.connection.gameHub;
            // Create a function that the hub can call back to display messages.
            gameHubProxy.client.opponentDisconnected = function(opponent) {
                addMessage(opponent, "disconnected");
            };

            $.connection.hub.start().done(function (args) {
                addMessage(null, 'You have connected');

                var playerName = prompt('Enter your name:', '');
                gameHubProxy.server.changeName(playerName).done(function (player) {
                    Player = player;
                    addMessage(Player, 'You have changed your name to ' + Player.Name);
                });
            });
            


            gameHubProxy.client.gameOver = function (isWinner) {
                if (isWinner) {
                    alert('you win');
                } else {
                    alert('you loose');

                }
            };

            gameHubProxy.client.prepare = function (projection) {
                addMessage(Player, 'Prepare to play with id = ' + projection.Opponent.ConnectionId);
                Duel = projection;
                gameHubProxy.server.readyToPlay();
            };
            
            gameHubProxy.client.play = function () {
                addMessage(Player, 'Playing now with id = ' + Duel.Opponent.ConnectionId);
            };
            
            gameHubProxy.client.receiveStep = function (step) {
                addMessage(Player, 'player moved ' + step.Points);
            };

            $('#playBtn').click(function () {
                addMessage(Player, "waiting for partener");
                gameHubProxy.server.waitPartner(Player);
            });
            $('#playWithFriendBtn').click(function () {
                addMessage(Player, "Sent Create Duel Request");
                gameHubProxy.server.createDuel().done(function (urlToShare) {
                    addMessage(Player, "Join Duel Link:" + urlToShare);
                });
            });
            $('#sendbtn').click(function () {
                var step = { Points: $('#message').val(), PlayerId: Player.ConnectionId };
                addMessage(Player, "moving for " + step.Points);
                gameHubProxy.server.recordStep(step);
                $('#message').val('');
                $('#sendbtn').focus();
            });
        });
        // This optional function html-encodes messages for display in the page.

        function addMessage(player, msg) {
            if (player) {
                $('#discussion').append('<li><strong>' + htmlEncode(player.Name + ' (' + player.ConnectionId + ')')
                    + '</strong>: ' + htmlEncode(msg) + '</li>');
            } else {
                $('#discussion').append('<li>' + htmlEncode(msg) + '</li>');
            }
        }

        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
